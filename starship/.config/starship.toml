format = """
$username$hostname\
[:](fg:#ff657a)\
$directory\
${custom.git_branch}\
$git_status\
${custom.jj}\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$zig\
$scala\
$venv\
$docker_context\
[|](fg:#7e8294)\
$time
\\$ 
"""

right_format = """$status"""

[status]
disabled = false

# Disable the blank line at the start of the prompt
# add_newline = false

# You can also replace your username with a neat symbol like ÔÑ† to save some space
[username]
show_always = true
style_user = "fg:#ff657a"
style_root = "fg:#ff657a"
format = '[$user]($style bold)'

[hostname]
ssh_only = false
ssh_symbol = "üåê"
style = "fg:#edc763"
format = '[@$ssh_symbol$hostname]($style italic)'

[directory]
style = "fg:#bad761"
format = "[$path ]($style bold)"
truncate_to_repo = true
truncation_length = 5
truncation_symbol = "‚Ä¶/"

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "Ôúò "
"Downloads" = "ÔÄô "
"Music" = "ÔÄÅ "
"Pictures" = "ÔÄæ "
# Keep in mind that the order matters. For example:
# "Important Documents" = " ÔúòÔÑ™ "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important Ôúò " = " ÔúòÔÑ™ "

[c]
symbol = "Óòû"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[docker_context]
symbol = "Ôåà"
style = "fg:#6dcae8"
format = '[$symbol $context ]($style) $path'

[elixir]
symbol = "Óâµ"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[elm]
symbol = "Óò¨"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[git_branch]
disabled = true
symbol = "Ôêò"
style = "fg:#f89860"
format = '[$symbol $branch]($style bold)(:$remote_name/$remote_branch)'

[git_status]
style = "fg:#ffd76d"
format = '[$all_status$ahead_behind ]($style)'

# custom module for jj status
[custom.jj]
ignore_timeout = true
description = "current jj status"
symbol = ""
when = true
command = '''
jj root > /dev/null && jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    "ü•ã",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "üí•"),
      if(divergent, "üöß"),
      if(hidden, "üëª"),
      if(immutable, "üîí"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ if(description.first_line().len() == 0,
      "(no description set)",
      if(description.first_line().substr(0, 29) == description.first_line(),
        description.first_line(),
        description.first_line().substr(0, 29) ++ "‚Ä¶",
      )
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

# disable git modules
[git_state]
disabled = true

[git_commit]
disabled = true

[git_metrics]
disabled = true

# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"

[golang]
symbol = "Óòß"
style = "fg:#7e8294"
format = '[$symbol ($version )($mod_version )]($style)'

[haskell]
symbol = "Óù∑"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[java]
symbol = "Óâñ"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[julia]
symbol = "Óò§"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[nodejs]
symbol = "Óúò"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[nim]
symbol = "Ôö§"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[rust]
symbol = "Óû®"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[zig]
symbol = "‚ÜØ"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[scala]
symbol = "Óú∑"
style = "fg:#7e8294"
format = '[$symbol ($version )]($style)'

[time]
disabled = false
time_format = "%R" # Hour:Minute Format
style = "fg:#6dcae8"
format = '[ $time ]($style bold)'
